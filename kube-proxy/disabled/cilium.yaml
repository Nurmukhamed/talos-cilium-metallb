---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU0yekh0S0NvZGcvZys3MDE0UmN6dVF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRBek1EQTNNRGN4TUZvWERUSTFNVEF5T1RBMwpNRGN4TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxWTdUdDVvT0NiNUhUOURFdDR1Vmc3M3NFWmhpdWFQYzZFSnZDS1lXZm5CakxmN2sKdHhvd0VBRzU0dG41TTA1Q1Z4Q3FPYUtudXZmcmRqMmJmRTZlNExRd1EybGlVam4vQjZ5bXl6bFdJdWx4S2FaYQo3T0VqYnViQ0o3dWljQ1ZJUjhWcXcvZXFBYXZNemY2QnoxVHBVS2NlYUp4dG1yeTVGTVRPRVhDVzVBMzJIMWVECjdXODkyTUMyUFN6ZkltVGhzUUJydWg0ZlFiZ05EOGxRVWFvMHV5TlVLZWVVdWcxai9sbkNkTnV3MXovb0ZXbHMKQXY3aTRtdktEb3F3RUFhYlp3M3hGZEo2cGlGMXJzajBtVG9ndnpiTkxWNmNtTFo5VnhteFZKSTM0ZjlXdW8zdQpOSThFNm1MQm1XdmtMN2JFQlozaHUxdERaS2p2TTVSTFJ3bUhIUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGS2tuaEoxKzBsT05CTDFCZHJHeDRndlBYamw3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkxrdm5FeGFxSUlxZkhsY2ZlcUhxUC9ZZEVMNUp5SU1IUjNUMndMZ2lIL29pSU5sMlFUMVpvClp3YW03NHp2K3duMUl5YUN2L1FYMDFFOVFRS0YwV2RURy94dllQdjFjUk1qMElYZ21OdHZRY0lOSjA5Tm5vSG0KVERHdU1mVDd2TFU4a2NxSzE5SkZLOGdUVVMySituQTVFUlpleHRiTWxZbEt1WjZaN1YrdEdxRDAyc0F3WG4rSQp0Rll5dUpSYjNsZVhad1J1QjF3UTZWazl4aDVtTlpNcXlyU1JpTkZPMzVURllLSW5la1MraWE1MnZvc2Z2ME1LClkvc293d2lFZDNyUWVpckkwNk1SVjBVMUVwNzVLZjVwb2o3dWo1ckZPdU9Fa0o3L2RVZVJJUW4vT1pCOU0wTjcKQXpvWi85NUY4YlpCUzlCMzQwd1QzK2pVTEYvTFJ3UmYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcVk3VHQ1b09DYjVIVDlERXQ0dVZnNzNzRVpoaXVhUGM2RUp2Q0tZV2ZuQmpMZjdrCnR4b3dFQUc1NHRuNU0wNUNWeENxT2FLbnV2ZnJkajJiZkU2ZTRMUXdRMmxpVWpuL0I2eW15emxXSXVseEthWmEKN09FamJ1YkNKN3VpY0NWSVI4VnF3L2VxQWF2TXpmNkJ6MVRwVUtjZWFKeHRtcnk1Rk1UT0VYQ1c1QTMySDFlRAo3Vzg5Mk1DMlBTemZJbVRoc1FCcnVoNGZRYmdORDhsUVVhbzB1eU5VS2VlVXVnMWovbG5DZE51dzF6L29GV2xzCkF2N2k0bXZLRG9xd0VBYWJadzN4RmRKNnBpRjFyc2owbVRvZ3Z6Yk5MVjZjbUxaOVZ4bXhWSkkzNGY5V3VvM3UKTkk4RTZtTEJtV3ZrTDdiRUJaM2h1MXREWktqdk01UkxSd21ISFFJREFRQUJBb0lCQUU4cktSK3BCclQxNjBZUgpMRWluSEFDUFJSSlNISWFoUkJ3T0tOblk4dGZHa2doLzR6cTdONFhCeUpGclJUZjNhbkpNamE2cmk3VjQzTEF3Cnc5Q2V4UUFXSWhMWHVkaTZ5NkZCcy85Zm5pQmU3eitMTlJrMVpkMzZVTjFNZHVQMkJIRytjOE5jZUR5Zmd0a0wKNUlCeUhSNVRhWmRlc3E1MVA5VzZycHpsL1E0dDAzZGg3Z004THAwOU5nR2c5WExRb24vSk14ZHBNd0JBcDJZWgpneTFqbTNUTE1lM01wM0wwc0FZbXRZS2p1c3kvQzhaWGNTZXR2Yk9XOG1sNGl3SVlOVFJ2ZEFhSlc0aEpxK0xxCk43eHFTL1d2bVlzZ0RNd1NCVW5zUzgxcWVYRURRREcwYnZ4akhlOXpSYnl6V1hPdkdnVmxveklEZ2JXeHZUZmgKZFBmOW8rRUNnWUVBd0ZldGtYVTdHb3M1YjhqNEF3ZE1PYVErQzRFVGFsdXoveHRBMkNsMkNvc3BxWENNWHpFNApNcVRpZDVVRkZ2YkxLWUZLQkJnZ3gwbDV0S2hOWTRpb0R0K0dHVWJzWlJCaUV5bnFTaVliVGU5ZzZtalRYY0gyCnFZb3FhKy82V25sUUdGUHBmUUFjQVh6Y05mS1BoTUh6VUJGTFRTM0dyR1NOZEFUY2Y5dEdJbjhDZ1lFQTRheTIKcjI1cDdzQ2MzYWQ3YU9RWThsWW1BZnVpQXNwcEw1QkVaSTVweEdMck9KcHloZXNkbFlSZ28rQ2hqR3VWaU95VApJUHNqNzR3d3ZybFc1UnBSQ1FzMHlBZXMraktWWXRDM0Z0Rldra3NXV0JIbVJMR3VXUVY1dzZ3RkdlSDhadG5hCmxNM0RrMDFCa1BCNC8vOVQxZ2lKcUR1YXQxRVB2cERIV1NtZDBHTUNnWUVBcXhMUXk5bExFbGJXWlRpSWJwa2wKRVBlbVA3RTBSWnIrdzEzSUZQcjdoSEUyUXdCWnVha2JaT0FHbFhtenB6TW1pK24wblNPZ3MrQUVJY3kzMkZtSgpzSURhMHN5a0lWZXJBNFI2WUN6NGlCN3JRbEt0L0d3eUthVThDZmpONFg2WTRLcHh0NzVMS24rVmxWNENqSCs5CkcyL21XK1RsR2h2dFBFMittUEc4dFowQ2dZRUF4NmZpOURBdVBsRmdOdVhlMC96QmFWejRRVmJiamJaLyt0bWEKK0kvYVdTbmV5dlF4ai9OaitBem01dlZzVjJ3ekhyR1d0VjRhKytxK2tXNHR4NEZSNGp0czFlK2NoTHBOMmQrbgpxK05Hd1NUM1ByR1BWSVVTSjZZbGhRemljblN4dGxqVS9rTlEzVGhEWXJTdGlHYmZTQVBEcmZnVnVFdGFMNUd0CkhHQXFROXNDZ1lBbDgzSkF2cTg3TTMya0lQR3YzTmd5MGJicFpiekUrTEhXcDJTR282Q2tzd25tQTVqeXRTMmIKTDdOVkZqYk1TbEpYMGF5UUs3RWdVdW5BODVWYmY5ajROb01oeHhUcGt5d3g0VTViOGducjRMWEsrVTFxMGhnMQpuR2tCUmdadGpReUcwam1RbDNLRjA2ZTBjMDk4d056WkwzQnhkRE9sU0N5M053OGNjWWFEd2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU0yekh0S0NvZGcvZys3MDE0UmN6dVF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRBek1EQTNNRGN4TUZvWERUSTFNVEF5T1RBMwpNRGN4TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxWTdUdDVvT0NiNUhUOURFdDR1Vmc3M3NFWmhpdWFQYzZFSnZDS1lXZm5CakxmN2sKdHhvd0VBRzU0dG41TTA1Q1Z4Q3FPYUtudXZmcmRqMmJmRTZlNExRd1EybGlVam4vQjZ5bXl6bFdJdWx4S2FaYQo3T0VqYnViQ0o3dWljQ1ZJUjhWcXcvZXFBYXZNemY2QnoxVHBVS2NlYUp4dG1yeTVGTVRPRVhDVzVBMzJIMWVECjdXODkyTUMyUFN6ZkltVGhzUUJydWg0ZlFiZ05EOGxRVWFvMHV5TlVLZWVVdWcxai9sbkNkTnV3MXovb0ZXbHMKQXY3aTRtdktEb3F3RUFhYlp3M3hGZEo2cGlGMXJzajBtVG9ndnpiTkxWNmNtTFo5VnhteFZKSTM0ZjlXdW8zdQpOSThFNm1MQm1XdmtMN2JFQlozaHUxdERaS2p2TTVSTFJ3bUhIUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGS2tuaEoxKzBsT05CTDFCZHJHeDRndlBYamw3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkxrdm5FeGFxSUlxZkhsY2ZlcUhxUC9ZZEVMNUp5SU1IUjNUMndMZ2lIL29pSU5sMlFUMVpvClp3YW03NHp2K3duMUl5YUN2L1FYMDFFOVFRS0YwV2RURy94dllQdjFjUk1qMElYZ21OdHZRY0lOSjA5Tm5vSG0KVERHdU1mVDd2TFU4a2NxSzE5SkZLOGdUVVMySituQTVFUlpleHRiTWxZbEt1WjZaN1YrdEdxRDAyc0F3WG4rSQp0Rll5dUpSYjNsZVhad1J1QjF3UTZWazl4aDVtTlpNcXlyU1JpTkZPMzVURllLSW5la1MraWE1MnZvc2Z2ME1LClkvc293d2lFZDNyUWVpckkwNk1SVjBVMUVwNzVLZjVwb2o3dWo1ckZPdU9Fa0o3L2RVZVJJUW4vT1pCOU0wTjcKQXpvWi85NUY4YlpCUzlCMzQwd1QzK2pVTEYvTFJ3UmYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcVk3VHQ1b09DYjVIVDlERXQ0dVZnNzNzRVpoaXVhUGM2RUp2Q0tZV2ZuQmpMZjdrCnR4b3dFQUc1NHRuNU0wNUNWeENxT2FLbnV2ZnJkajJiZkU2ZTRMUXdRMmxpVWpuL0I2eW15emxXSXVseEthWmEKN09FamJ1YkNKN3VpY0NWSVI4VnF3L2VxQWF2TXpmNkJ6MVRwVUtjZWFKeHRtcnk1Rk1UT0VYQ1c1QTMySDFlRAo3Vzg5Mk1DMlBTemZJbVRoc1FCcnVoNGZRYmdORDhsUVVhbzB1eU5VS2VlVXVnMWovbG5DZE51dzF6L29GV2xzCkF2N2k0bXZLRG9xd0VBYWJadzN4RmRKNnBpRjFyc2owbVRvZ3Z6Yk5MVjZjbUxaOVZ4bXhWSkkzNGY5V3VvM3UKTkk4RTZtTEJtV3ZrTDdiRUJaM2h1MXREWktqdk01UkxSd21ISFFJREFRQUJBb0lCQUU4cktSK3BCclQxNjBZUgpMRWluSEFDUFJSSlNISWFoUkJ3T0tOblk4dGZHa2doLzR6cTdONFhCeUpGclJUZjNhbkpNamE2cmk3VjQzTEF3Cnc5Q2V4UUFXSWhMWHVkaTZ5NkZCcy85Zm5pQmU3eitMTlJrMVpkMzZVTjFNZHVQMkJIRytjOE5jZUR5Zmd0a0wKNUlCeUhSNVRhWmRlc3E1MVA5VzZycHpsL1E0dDAzZGg3Z004THAwOU5nR2c5WExRb24vSk14ZHBNd0JBcDJZWgpneTFqbTNUTE1lM01wM0wwc0FZbXRZS2p1c3kvQzhaWGNTZXR2Yk9XOG1sNGl3SVlOVFJ2ZEFhSlc0aEpxK0xxCk43eHFTL1d2bVlzZ0RNd1NCVW5zUzgxcWVYRURRREcwYnZ4akhlOXpSYnl6V1hPdkdnVmxveklEZ2JXeHZUZmgKZFBmOW8rRUNnWUVBd0ZldGtYVTdHb3M1YjhqNEF3ZE1PYVErQzRFVGFsdXoveHRBMkNsMkNvc3BxWENNWHpFNApNcVRpZDVVRkZ2YkxLWUZLQkJnZ3gwbDV0S2hOWTRpb0R0K0dHVWJzWlJCaUV5bnFTaVliVGU5ZzZtalRYY0gyCnFZb3FhKy82V25sUUdGUHBmUUFjQVh6Y05mS1BoTUh6VUJGTFRTM0dyR1NOZEFUY2Y5dEdJbjhDZ1lFQTRheTIKcjI1cDdzQ2MzYWQ3YU9RWThsWW1BZnVpQXNwcEw1QkVaSTVweEdMck9KcHloZXNkbFlSZ28rQ2hqR3VWaU95VApJUHNqNzR3d3ZybFc1UnBSQ1FzMHlBZXMraktWWXRDM0Z0Rldra3NXV0JIbVJMR3VXUVY1dzZ3RkdlSDhadG5hCmxNM0RrMDFCa1BCNC8vOVQxZ2lKcUR1YXQxRVB2cERIV1NtZDBHTUNnWUVBcXhMUXk5bExFbGJXWlRpSWJwa2wKRVBlbVA3RTBSWnIrdzEzSUZQcjdoSEUyUXdCWnVha2JaT0FHbFhtenB6TW1pK24wblNPZ3MrQUVJY3kzMkZtSgpzSURhMHN5a0lWZXJBNFI2WUN6NGlCN3JRbEt0L0d3eUthVThDZmpONFg2WTRLcHh0NzVMS24rVmxWNENqSCs5CkcyL21XK1RsR2h2dFBFMittUEc4dFowQ2dZRUF4NmZpOURBdVBsRmdOdVhlMC96QmFWejRRVmJiamJaLyt0bWEKK0kvYVdTbmV5dlF4ai9OaitBem01dlZzVjJ3ekhyR1d0VjRhKytxK2tXNHR4NEZSNGp0czFlK2NoTHBOMmQrbgpxK05Hd1NUM1ByR1BWSVVTSjZZbGhRemljblN4dGxqVS9rTlEzVGhEWXJTdGlHYmZTQVBEcmZnVnVFdGFMNUd0CkhHQXFROXNDZ1lBbDgzSkF2cTg3TTMya0lQR3YzTmd5MGJicFpiekUrTEhXcDJTR282Q2tzd25tQTVqeXRTMmIKTDdOVkZqYk1TbEpYMGF5UUs3RWdVdW5BODVWYmY5ajROb01oeHhUcGt5d3g0VTViOGducjRMWEsrVTFxMGhnMQpuR2tCUmdadGpReUcwam1RbDNLRjA2ZTBjMDk4d056WkwzQnhkRE9sU0N5M053OGNjWWFEd2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU0yekh0S0NvZGcvZys3MDE0UmN6dVF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRBek1EQTNNRGN4TUZvWERUSTFNVEF5T1RBMwpNRGN4TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxWTdUdDVvT0NiNUhUOURFdDR1Vmc3M3NFWmhpdWFQYzZFSnZDS1lXZm5CakxmN2sKdHhvd0VBRzU0dG41TTA1Q1Z4Q3FPYUtudXZmcmRqMmJmRTZlNExRd1EybGlVam4vQjZ5bXl6bFdJdWx4S2FaYQo3T0VqYnViQ0o3dWljQ1ZJUjhWcXcvZXFBYXZNemY2QnoxVHBVS2NlYUp4dG1yeTVGTVRPRVhDVzVBMzJIMWVECjdXODkyTUMyUFN6ZkltVGhzUUJydWg0ZlFiZ05EOGxRVWFvMHV5TlVLZWVVdWcxai9sbkNkTnV3MXovb0ZXbHMKQXY3aTRtdktEb3F3RUFhYlp3M3hGZEo2cGlGMXJzajBtVG9ndnpiTkxWNmNtTFo5VnhteFZKSTM0ZjlXdW8zdQpOSThFNm1MQm1XdmtMN2JFQlozaHUxdERaS2p2TTVSTFJ3bUhIUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGS2tuaEoxKzBsT05CTDFCZHJHeDRndlBYamw3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkxrdm5FeGFxSUlxZkhsY2ZlcUhxUC9ZZEVMNUp5SU1IUjNUMndMZ2lIL29pSU5sMlFUMVpvClp3YW03NHp2K3duMUl5YUN2L1FYMDFFOVFRS0YwV2RURy94dllQdjFjUk1qMElYZ21OdHZRY0lOSjA5Tm5vSG0KVERHdU1mVDd2TFU4a2NxSzE5SkZLOGdUVVMySituQTVFUlpleHRiTWxZbEt1WjZaN1YrdEdxRDAyc0F3WG4rSQp0Rll5dUpSYjNsZVhad1J1QjF3UTZWazl4aDVtTlpNcXlyU1JpTkZPMzVURllLSW5la1MraWE1MnZvc2Z2ME1LClkvc293d2lFZDNyUWVpckkwNk1SVjBVMUVwNzVLZjVwb2o3dWo1ckZPdU9Fa0o3L2RVZVJJUW4vT1pCOU0wTjcKQXpvWi85NUY4YlpCUzlCMzQwd1QzK2pVTEYvTFJ3UmYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYRENDQWtTZ0F3SUJBZ0lRZEpENzNOY2QvTGJFVllSd2o0TDRTVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TURNd01EY3dOekV4V2hjTk1qVXhNREk1TURjdwpOekV4V2pBdE1Tc3dLUVlEVlFRRERDSXFMbTE1TFdOc2RYTjBaWEl1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTF2QmJ2dm5HU2p4Q0MvMkwKYmZFcTcwTTRkdXRtRVFRMXRoWGQzMHFzTWpEZ3I4djRmR3QxbTBkTndZeEF5Q0dsM0p0OGZ4Tjd6ZjY3bW9qQQpJdGxBYzZuamZmRUFhRjJyaGUzZUxmYjZEd01DRE9tSjFIUkdkRytBbzRVU1BNZnRGZG9NUXhZbUtwMWQ3d3dtClRka0xzbm4zVUVVanhBbzdoU2dXc0hjNlBKbGh6ZDJpRkZlelpxeVlod3FxMDZXWC9lMHE1UDJCNEc5MmlHZGwKY2xYQllnZ1hOdGgvQWdxSSswaEtFbm9GVTJtNnR2RHFWTkp2NzlNRHY4QW1jYjhxSndydU5MdXFkR0U5c2pMVgowOVliblF4N2FvRTRrOWg5STl6U05ZUzJPait2OE8rTHlMdWppeFlsMEZBb3lVWmwxemRLUkR4VXJ0OExzQ1JlCmg0Rm9CUUlEQVFBQm80R1FNSUdOTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU3BKNFNkZnRKVApqUVM5UVhheHNlSUx6MTQ1ZXpBdEJnTlZIUkVFSmpBa2dpSXFMbTE1TFdOc2RYTjBaWEl1YUhWaVlteGxMV2R5CmNHTXVZMmxzYVhWdExtbHZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNORFQ4Qjh0L3VQbnFNdERpa011eGEKZi9MRTZMWk10NjgzaVFDdTkxc1JsdVRHWWROc1FUdnAvODI0MmV3dmc1Yk9UbnBUbHJDZHBOQnh1aWhuMVYrNgp1ZXVZY1lBNyt0UHg5WGFnL0lnNUk3dElhUXZHMVlLVjYrME9VN01EOHRxNHZXNS9Qck8yOVY1aFhjbE1LU3IxCjhEbklaUVlqTTZHSXhwTm1hRzRYS3RPdnMraXFocS9rNnZBM1ZxblhFSXlNWFZHY3BFV2pZNU9yWm1VaSswUXAKUm9rVCtka1FJeXhEMTF3TWYzK0dReFE0eGUxWS9CYWtleXd5T2E1WExpYmpNOVV0SlozU3NLVFpLRWUxd01CZgpxdGt4czdLYytLeGJMcytGZVNZTnN4SEM0bVRrVUZ4RDlXOTcxSjMxOXUwekJkUU5aVEU4YU9HM2pBSWxGQWpLCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMXZCYnZ2bkdTanhDQy8yTGJmRXE3ME00ZHV0bUVRUTF0aFhkMzBxc01qRGdyOHY0CmZHdDFtMGROd1l4QXlDR2wzSnQ4ZnhON3pmNjdtb2pBSXRsQWM2bmpmZkVBYUYycmhlM2VMZmI2RHdNQ0RPbUoKMUhSR2RHK0FvNFVTUE1mdEZkb01ReFltS3AxZDd3d21UZGtMc25uM1VFVWp4QW83aFNnV3NIYzZQSmxoemQyaQpGRmV6WnF5WWh3cXEwNldYL2UwcTVQMkI0RzkyaUdkbGNsWEJZZ2dYTnRoL0FncUkrMGhLRW5vRlUybTZ0dkRxClZOSnY3OU1EdjhBbWNiOHFKd3J1Tkx1cWRHRTlzakxWMDlZYm5ReDdhb0U0azloOUk5elNOWVMyT2ordjhPK0wKeUx1aml4WWwwRkFveVVabDF6ZEtSRHhVcnQ4THNDUmVoNEZvQlFJREFRQUJBb0lCQUhLMmF6QzhtN0NKQW5MbAp5YUZPb2l4NkFzdXRESmN1V1FBcUlYVUhwR2xSSHNtVUliVTlvTkhUdDFNQjZKMG5JQjlpT0lxVnVuQ1JjRXlrCmlXN1A1ZzhVNzU0S25yNFVwL05kcFVPQTJhcGpYNWZHbUZIMEVKb1ozRnpwSzNlVytCaStlK2JlRGxhV0VFa0IKZ2Z2d1I4YmtRekxyQTVDZ0tXNENuRUZvRUlQQUdrYStWRklGcWE5QWp1ZUIxTytCT0c0OUpHWExlcXZrU3lQYgpRNUtGRFdzQUt0YmdvWjJHSk5TQyt3MFdWUmNYellxWGlwQTNWck5yMkIrL0V6T0dNdk9JZDFDNERaQlJyMUxRCmR5SXZmenJIN0RCeGsvV2U4Yy9IUnhseUl4NlJKN0tKRjB5VnNDKytVZGdSOUJJYzlXTVk5N2pEK0pQMFZOekIKcmc4aU91RUNnWUVBN0lhSndlbGk5alQrVzB6MUdScXpPS2c4L3V1alpPdnhsOFduVkVJaUkyU1dXQlV3b3B0dQovWk5DQlMvVnRVYWlCbXRGOUZ1cUE5UE1nbEJ3VUtiRGQwek5XVEg0Nnd3Z2RGdXRieVJSMDVzNGoyby9LMDFtCmFXa08zRDdId1NnbE9pVjU0VlQ0V0hjM0MrSWNTWWpoN1JpbjFhT0Y5MzlVSVhKaE14WEd5NGtDZ1lFQTZLTFIKdUQ4elpJUTdIYkE5QkJMUytWVWJFNytQc3pwZUNnZTNFMzdSbTR1SWI5MkdyK3ZwZTZhZWFERXdCSzZkQjREawpSS21pK3kxMmU5aVV1UXZpMFV0cHBPWXhEVHhiejZwVGgzaHIyTnQ1Z21JL2JiMUpWZmcwS21DOUpMbytNS1Z1CllKRjhYWmQra01ETnd5a05PWERzaytkN29oRDIwSC9WMEJMenJaMENnWUFjaGJEUkNITGRtOUJjZERCT1FiRUIKRVJDaDhRcDRIaGU1SktXai9JR2ZZUDdjU2xuZUVmNVZaOCtiVG9SbjRzZWhISWlJQ2hHN2VtdjcvdlU4VkkvWApzQlJIUUVaekdiaEVMOVgvUkJMMkFJN1doSXB2ajFyZE5VVU1mQ21jZWxuYTVEQUpZelM3Zmt6T0N3czhOdHgvCnVleHJUOWZVMjY3cWhaK0JDSXc3ZVFLQmdIZWRLQm9GSFFhazJzU0VGb3RlcG0yZTdjSTByODFteUcxOTFBdEoKSEx0T2ZrT09jcTlIckpCd2RtaDZTZ2RPUk4xVHo0cmljak9XQjZMY0ZIUWxBV1c5MGI4QXdOM2VXQktwc0RNcQpuc0VzOEFnelBndk4xTVJJVDRJdXBYSVo5Tm9NWlhsdnRMTm1ycVA5RG84M0wxNkdpbzN0NnVyRXNETTZWNVNaCitnTWRBb0dBVXB1Y1czc05oc293WHdWNTV6MVhScDVPWi9YTTJabVdEM0NsUklYNWVRZzJMdmNYSDZUVVBYMlQKcEFrRGJtSS9GVzNmNmh5Sm5Ldm5kd2hpcnBOMG1UTy84aTUwUmx6Wm9CbExXQTZuYmZzTk1LL3BSeTNvZ1duOQpIWXJ2eGlBOGsxSTJPZGpTbm54SmdJWE1JcFh4bFhZNytzZmszMDM3K3l1SHVFL1JpYkU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: my-cluster
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.121.5"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.121.5"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.12.2@sha256:00508f78dae5412161fa40ee30069c2802aef20f7bdd20e91423103ba8c0df6e
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.121.5"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
