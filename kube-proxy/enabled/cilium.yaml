---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUwxL05kTVhxdThwbURDeDllSElmcVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRFd01UQTRNVEExTWxvWERUSTFNVEF6TVRBNApNVEExTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2SnVhbTE1OFRSMmFNMldhN2grcU5UNStLY21jWllPVGllSmpPWVlPR0creExJMW0KS0M5RURxMjlqM2VlaCtsd2U1YzFJdi9hcGJLSlRCcEc1bjMwUEhzNWFrV0tjVXVlWW1BMXA3TUJHblprOWtOZApuQ1ZnUjNmQlFKUXBrZEhPWmp4TnNsRitjSHA2aTNhaUJmdHVSbGdyaFJRRTFabTc0SUhqUVBXSW0yK0tMSXhCCmdybldHNzZZaUxPUnorOFhrRnVSNkZWNnJGOVlNek4zSVgvQVliZkE0NU5jOExaU0c5MHVIa0E5VnV1T1Y5ZG4KdUYvSWdXNVN6YW5tUUlFakl0cmd4V3VyMjdlcVJFblpQZmdVL05XTGpFaEJzenpKR3JJS3FIVndTdXpzZmF1VQpzZTVlWERVcHQ2SkhCVGJZMFFtYzhHZ3pxMElzazVoY2FLamlXUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTm1mczRpUTdxYnZwMFNqd0grMS8wbVZIK0FFTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzhPb0pDVFFLQWxyTFRIVCtkZmFkZENjdGFtYklFS09jTzFlbWhGZHAwTG1ML0Fla3owMHJMClVoM0kvTS9hY1dGV01LV29HdTBxZVNPNjVGUUVBWm5lVElmUmxQZ01QOVNmd2xMU1NCMGVpNFZaZ1hQL3JaSVgKM1FkMUZOVkcwckJZbXV6cUNPYlhjUlZLV2dGL1RENERSY0pOeHhvUEsrZDQwSVJEU0tZOFlyNzg3MHdBQ1QvcQo2SCtMV01SZWJhT2xqQkpLZ1hSSjM1Um43OGFWMDJYQkhwRUZ3T2Jta0o2RUxWbXJTWGVQc0V3eldGa1FNLzdoCktqN0FXQWlJVWlaRVU5Y3BtQi90MHVHNVUxOEtkYkdESjloQVNxaTZHM1A0Z3JGNzVuY09kRys1Q3BkWENmZmkKcUEzWXVWQWVRQk1ROGFOMlF5U3R1a1BpYzI4T2dISVkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdkp1YW0xNThUUjJhTTJXYTdoK3FOVDUrS2NtY1pZT1RpZUpqT1lZT0dHK3hMSTFtCktDOUVEcTI5ajNlZWgrbHdlNWMxSXYvYXBiS0pUQnBHNW4zMFBIczVha1dLY1V1ZVltQTFwN01CR25aazlrTmQKbkNWZ1IzZkJRSlFwa2RIT1pqeE5zbEYrY0hwNmkzYWlCZnR1UmxncmhSUUUxWm03NElIalFQV0ltMitLTEl4Qgpncm5XRzc2WWlMT1J6KzhYa0Z1UjZGVjZyRjlZTXpOM0lYL0FZYmZBNDVOYzhMWlNHOTB1SGtBOVZ1dU9WOWRuCnVGL0lnVzVTemFubVFJRWpJdHJneFd1cjI3ZXFSRW5aUGZnVS9OV0xqRWhCc3p6SkdySUtxSFZ3U3V6c2ZhdVUKc2U1ZVhEVXB0NkpIQlRiWTBRbWM4R2d6cTBJc2s1aGNhS2ppV1FJREFRQUJBb0lCQVFDSFVXeS9oQzdTZFNhcApNWURTejgwaW5rK09VNlB1QVZUZFhKdXNMYzMzSWt1UGwzTnY2VmwrM3BCZVdvaFhJdGtkRXdPQXRPaCtjWFdvCk1FSW1KTUFTbEtaQTVOdkxKV0hoV3YyajcvNGVxa3NObEkrWTlBZjd2cVBjWFhEbHVnM0h0QVJhcDdWN3BhUSsKWTBNajM1eml3MmVWOXlMd3pYZktQK1o0T0xGbU1vaXlxZnJaLzNiMERmYnlBTHVyL21Gb3VHVW13ay9kc2tsbApua0tjcjZpNVVHU3I1WTBQZUU1UEQ0dEJnMXphWk5PbWtBSTBZMEFJcU9zWWY4cTZxMnl0M1d1RUJFeWphdmxjCjJGMkJFSjNUc1JPdTBjTGNWTE1OdmZjSW41KzVqVmpFTDFwaFpla2I0TGZZbU1yMVZ2M01zSGJzRi95QU0xMloKaHJTcUo3NHhBb0dCQU9pZTErc2hnLzREd2tINDdWT2dNcDRlY2hER2dWMCtGSVkvY3dRTFRnNWNDd1A2VlJndwpUU1FvQmRScVdmczFwVENCZENCaXZGSDlPRDYrOE91K0hmZUFEN3U5RlNGQTJHODRLQkxWTS96cHF4ckxucTdXCnR2cUpOa0JiYTcwak4rM0dFMkdMQXZKNXlUcGJDbkg2cFFiK3dhakRVdHlMZUxQWU5Ha3VlUnY3QW9HQkFNK1EKV01aTC9Ha1NmaDVVd2dKRmRaOSsrQlhoV05ETFMxTnh5R0Fmc3QvbkxmVWo1cWFOQjNsT3hxSlRsVURRVVNoRQpXTHZqVnYrTFBZY2FVSU9MYjI5YnZneHYrdnU0cFFPTzRKL1ZLa2hFa0c0WW96U1N2Y2VXQjVRcktKOWxaZTJvCkhCaFJSck4xZW5ETmdpVE5hQTNkY05yZCtFNmJvNWNGTWIxdVY3YTdBb0dBSmxkWUcyZFF6Q051ZDFWQ09OQmsKeDI4Wk9lNmVEL0pWaTdNVmtBc1UrSVR2UTk2VS9BR3FGVldMY0hGL0YwckdTWEpzNDVHaW5KanlGbFYrZkR5Lwp6N1dKNGxYT0Q4Y1NaWEtLR0dDUHl4WHduK0FEN2FseVMyVW1UZ0ZEaHM4eFByMnhJQmk3aVovTkxSTW9hNVQyCmNtcTNITXZrOG5rQ2toSUd3WGRwZXRVQ2dZRUFsS3loV2hDTmtUbWt5dGNOVEpFeVNuZW8vZ3MzRWYrOFNkNEQKbUE2OGtyTEY4WVN3cnZYdnQ0MmNyQ05Ra21kazZvSGlTVnJ6TXdJcXBUNU5FNXhweW9zZFcwMU9xc1c4dFFxLwpqTjBrZHpWZGV1Nzg0Q2lIOVpGYWhtQlByYlQweU1HVXRqcHBlUndhQXZqQlV0a3F3bHV1ZmFkbk4rODF3M1ArCkIrRWt4UWNDZ1lFQXVleFVTYUgvRlBPUjQ3Z29nRFJRM250d3ExdS9HY2M5YW9uRGFpSmE4U2ZRWnNnZjlJSjkKUGplY0t5RDIxNVFWbGtMM29SU210M1NKcUdlWjhWRmlrd1Q2M1RyK0lsSkhVMURlL2l3eTIvZjcrdFVBc2VSaApuenozQ2N1b2lMTGlGUiszVkNkcDJkUUFibEo1SWwrSkFEcmpWU1A2eXRlaVFpUG9IZmNveGxVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUwxL05kTVhxdThwbURDeDllSElmcVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRFd01UQTRNVEExTWxvWERUSTFNVEF6TVRBNApNVEExTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2SnVhbTE1OFRSMmFNMldhN2grcU5UNStLY21jWllPVGllSmpPWVlPR0creExJMW0KS0M5RURxMjlqM2VlaCtsd2U1YzFJdi9hcGJLSlRCcEc1bjMwUEhzNWFrV0tjVXVlWW1BMXA3TUJHblprOWtOZApuQ1ZnUjNmQlFKUXBrZEhPWmp4TnNsRitjSHA2aTNhaUJmdHVSbGdyaFJRRTFabTc0SUhqUVBXSW0yK0tMSXhCCmdybldHNzZZaUxPUnorOFhrRnVSNkZWNnJGOVlNek4zSVgvQVliZkE0NU5jOExaU0c5MHVIa0E5VnV1T1Y5ZG4KdUYvSWdXNVN6YW5tUUlFakl0cmd4V3VyMjdlcVJFblpQZmdVL05XTGpFaEJzenpKR3JJS3FIVndTdXpzZmF1VQpzZTVlWERVcHQ2SkhCVGJZMFFtYzhHZ3pxMElzazVoY2FLamlXUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTm1mczRpUTdxYnZwMFNqd0grMS8wbVZIK0FFTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzhPb0pDVFFLQWxyTFRIVCtkZmFkZENjdGFtYklFS09jTzFlbWhGZHAwTG1ML0Fla3owMHJMClVoM0kvTS9hY1dGV01LV29HdTBxZVNPNjVGUUVBWm5lVElmUmxQZ01QOVNmd2xMU1NCMGVpNFZaZ1hQL3JaSVgKM1FkMUZOVkcwckJZbXV6cUNPYlhjUlZLV2dGL1RENERSY0pOeHhvUEsrZDQwSVJEU0tZOFlyNzg3MHdBQ1QvcQo2SCtMV01SZWJhT2xqQkpLZ1hSSjM1Um43OGFWMDJYQkhwRUZ3T2Jta0o2RUxWbXJTWGVQc0V3eldGa1FNLzdoCktqN0FXQWlJVWlaRVU5Y3BtQi90MHVHNVUxOEtkYkdESjloQVNxaTZHM1A0Z3JGNzVuY09kRys1Q3BkWENmZmkKcUEzWXVWQWVRQk1ROGFOMlF5U3R1a1BpYzI4T2dISVkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdkp1YW0xNThUUjJhTTJXYTdoK3FOVDUrS2NtY1pZT1RpZUpqT1lZT0dHK3hMSTFtCktDOUVEcTI5ajNlZWgrbHdlNWMxSXYvYXBiS0pUQnBHNW4zMFBIczVha1dLY1V1ZVltQTFwN01CR25aazlrTmQKbkNWZ1IzZkJRSlFwa2RIT1pqeE5zbEYrY0hwNmkzYWlCZnR1UmxncmhSUUUxWm03NElIalFQV0ltMitLTEl4Qgpncm5XRzc2WWlMT1J6KzhYa0Z1UjZGVjZyRjlZTXpOM0lYL0FZYmZBNDVOYzhMWlNHOTB1SGtBOVZ1dU9WOWRuCnVGL0lnVzVTemFubVFJRWpJdHJneFd1cjI3ZXFSRW5aUGZnVS9OV0xqRWhCc3p6SkdySUtxSFZ3U3V6c2ZhdVUKc2U1ZVhEVXB0NkpIQlRiWTBRbWM4R2d6cTBJc2s1aGNhS2ppV1FJREFRQUJBb0lCQVFDSFVXeS9oQzdTZFNhcApNWURTejgwaW5rK09VNlB1QVZUZFhKdXNMYzMzSWt1UGwzTnY2VmwrM3BCZVdvaFhJdGtkRXdPQXRPaCtjWFdvCk1FSW1KTUFTbEtaQTVOdkxKV0hoV3YyajcvNGVxa3NObEkrWTlBZjd2cVBjWFhEbHVnM0h0QVJhcDdWN3BhUSsKWTBNajM1eml3MmVWOXlMd3pYZktQK1o0T0xGbU1vaXlxZnJaLzNiMERmYnlBTHVyL21Gb3VHVW13ay9kc2tsbApua0tjcjZpNVVHU3I1WTBQZUU1UEQ0dEJnMXphWk5PbWtBSTBZMEFJcU9zWWY4cTZxMnl0M1d1RUJFeWphdmxjCjJGMkJFSjNUc1JPdTBjTGNWTE1OdmZjSW41KzVqVmpFTDFwaFpla2I0TGZZbU1yMVZ2M01zSGJzRi95QU0xMloKaHJTcUo3NHhBb0dCQU9pZTErc2hnLzREd2tINDdWT2dNcDRlY2hER2dWMCtGSVkvY3dRTFRnNWNDd1A2VlJndwpUU1FvQmRScVdmczFwVENCZENCaXZGSDlPRDYrOE91K0hmZUFEN3U5RlNGQTJHODRLQkxWTS96cHF4ckxucTdXCnR2cUpOa0JiYTcwak4rM0dFMkdMQXZKNXlUcGJDbkg2cFFiK3dhakRVdHlMZUxQWU5Ha3VlUnY3QW9HQkFNK1EKV01aTC9Ha1NmaDVVd2dKRmRaOSsrQlhoV05ETFMxTnh5R0Fmc3QvbkxmVWo1cWFOQjNsT3hxSlRsVURRVVNoRQpXTHZqVnYrTFBZY2FVSU9MYjI5YnZneHYrdnU0cFFPTzRKL1ZLa2hFa0c0WW96U1N2Y2VXQjVRcktKOWxaZTJvCkhCaFJSck4xZW5ETmdpVE5hQTNkY05yZCtFNmJvNWNGTWIxdVY3YTdBb0dBSmxkWUcyZFF6Q051ZDFWQ09OQmsKeDI4Wk9lNmVEL0pWaTdNVmtBc1UrSVR2UTk2VS9BR3FGVldMY0hGL0YwckdTWEpzNDVHaW5KanlGbFYrZkR5Lwp6N1dKNGxYT0Q4Y1NaWEtLR0dDUHl4WHduK0FEN2FseVMyVW1UZ0ZEaHM4eFByMnhJQmk3aVovTkxSTW9hNVQyCmNtcTNITXZrOG5rQ2toSUd3WGRwZXRVQ2dZRUFsS3loV2hDTmtUbWt5dGNOVEpFeVNuZW8vZ3MzRWYrOFNkNEQKbUE2OGtyTEY4WVN3cnZYdnQ0MmNyQ05Ra21kazZvSGlTVnJ6TXdJcXBUNU5FNXhweW9zZFcwMU9xc1c4dFFxLwpqTjBrZHpWZGV1Nzg0Q2lIOVpGYWhtQlByYlQweU1HVXRqcHBlUndhQXZqQlV0a3F3bHV1ZmFkbk4rODF3M1ArCkIrRWt4UWNDZ1lFQXVleFVTYUgvRlBPUjQ3Z29nRFJRM250d3ExdS9HY2M5YW9uRGFpSmE4U2ZRWnNnZjlJSjkKUGplY0t5RDIxNVFWbGtMM29SU210M1NKcUdlWjhWRmlrd1Q2M1RyK0lsSkhVMURlL2l3eTIvZjcrdFVBc2VSaApuenozQ2N1b2lMTGlGUiszVkNkcDJkUUFibEo1SWwrSkFEcmpWU1A2eXRlaVFpUG9IZmNveGxVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUwxL05kTVhxdThwbURDeDllSElmcVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRFd01UQTRNVEExTWxvWERUSTFNVEF6TVRBNApNVEExTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2SnVhbTE1OFRSMmFNMldhN2grcU5UNStLY21jWllPVGllSmpPWVlPR0creExJMW0KS0M5RURxMjlqM2VlaCtsd2U1YzFJdi9hcGJLSlRCcEc1bjMwUEhzNWFrV0tjVXVlWW1BMXA3TUJHblprOWtOZApuQ1ZnUjNmQlFKUXBrZEhPWmp4TnNsRitjSHA2aTNhaUJmdHVSbGdyaFJRRTFabTc0SUhqUVBXSW0yK0tMSXhCCmdybldHNzZZaUxPUnorOFhrRnVSNkZWNnJGOVlNek4zSVgvQVliZkE0NU5jOExaU0c5MHVIa0E5VnV1T1Y5ZG4KdUYvSWdXNVN6YW5tUUlFakl0cmd4V3VyMjdlcVJFblpQZmdVL05XTGpFaEJzenpKR3JJS3FIVndTdXpzZmF1VQpzZTVlWERVcHQ2SkhCVGJZMFFtYzhHZ3pxMElzazVoY2FLamlXUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTm1mczRpUTdxYnZwMFNqd0grMS8wbVZIK0FFTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzhPb0pDVFFLQWxyTFRIVCtkZmFkZENjdGFtYklFS09jTzFlbWhGZHAwTG1ML0Fla3owMHJMClVoM0kvTS9hY1dGV01LV29HdTBxZVNPNjVGUUVBWm5lVElmUmxQZ01QOVNmd2xMU1NCMGVpNFZaZ1hQL3JaSVgKM1FkMUZOVkcwckJZbXV6cUNPYlhjUlZLV2dGL1RENERSY0pOeHhvUEsrZDQwSVJEU0tZOFlyNzg3MHdBQ1QvcQo2SCtMV01SZWJhT2xqQkpLZ1hSSjM1Um43OGFWMDJYQkhwRUZ3T2Jta0o2RUxWbXJTWGVQc0V3eldGa1FNLzdoCktqN0FXQWlJVWlaRVU5Y3BtQi90MHVHNVUxOEtkYkdESjloQVNxaTZHM1A0Z3JGNzVuY09kRys1Q3BkWENmZmkKcUEzWXVWQWVRQk1ROGFOMlF5U3R1a1BpYzI4T2dISVkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lSQU1aMXNHa0l0cVhzWDl4L2FjWDE1VUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRFd01UQTRNVEExTWxvWERUSTFNVEF6TVRBNApNVEExTWxvd0xURXJNQ2tHQTFVRUF3d2lLaTV0ZVMxamJIVnpkR1Z5TG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPcmh6SkY5b055RjRyUEMKd3ZEK1BZckE2TE9ucXZEMG1NeFFzWWdwUkNkcHZrblJ4c3lSMDlQb0I4SDFibWJ5aWprY0IyUTNTRHg5WGQzbApYYm1pQkF1b2NBL0RqN2FtWldNTzhKalZYQ0JsclQ0SE9QSjBTMDFiZHFBcjNQbDlVNHIwVytKaXZuSDJ4WUd5CnllYm4xbVFMc1hRUFppdmsxVWdXTWtIbmZsdlVrSDN6SkVMNmJEbi90WkRIRVI1VUpYbDVZS2h6WkFGTFhPM04KVVQyMWVIN3krN3RnR1lmMlBaNHYzWUhjYmJhV3d6Mi8yc1dTNThTd09TdHpyVXJGeHpZM0toMVZsaDFMSXZxQgpuWlAwUm5DeWNuNWRpWkluSmt4M1Y2ZnlLNlR5aHZjbHB1K2V3SFdwWW5MbU5wdXdPUHQzU0dKUEIrNXRMdzd6CnNYWHVLNGNDQXdFQUFhT0JrRENCalRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVUyWit6aUpEdQpwdStuUktQQWY3WC9TWlVmNEFRd0xRWURWUjBSQkNZd0pJSWlLaTV0ZVMxamJIVnpkR1Z5TG1oMVltSnNaUzFuCmNuQmpMbU5wYkdsMWJTNXBiekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBWDdZT0x1UXZmZ2Rub3g4WWlvZHcKS0xFRmhWY1pXbHlFYWh1ZzZ6TjFSbkZSV3NjRWNwdDRFMWlsRndPa2tNQXdlendIZHRvcmRNcm9ObmQyR0t4NgpxdndBVzJXTnZXVHo0cTJ0SkhrMFM3RkpHNlp2dmZxWVFjcWh3SDF2eGl3TjZOSkVNZUJhRjBmMWg1NkgzOUpGClk1WEg1QVJTbEE4dllLTmJNaXBIamxseVdlQ2xzVG9tb0djeWk5Tkh1SHZIV2JuWWd6LzMvVmM4bmd1dy9ucjIKOTBYeTRmWmNhS1M5MmlyaE9vckk3Rm8zUHZqRHg0WXRuZDJYRGFTLzFUWnRONmNWQWkrOGgxV2pjSWM5clNmUwo3VmxzakQvVkhKSHh3OG9Dcm9IeEI3bWpmTWxiU0loeU9VOFZ6d05vTndZMWh0NnBEMnhBenJmSjBnU21CaFplCndnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNnVITWtYMmczSVhpczhMQzhQNDlpc0RvczZlcThQU1l6RkN4aUNsRUoybStTZEhHCnpKSFQwK2dId2ZWdVp2S0tPUndIWkRkSVBIMWQzZVZkdWFJRUM2aHdEOE9QdHFabFl3N3dtTlZjSUdXdFBnYzQKOG5STFRWdDJvQ3ZjK1gxVGl2UmI0bUsrY2ZiRmdiTEo1dWZXWkF1eGRBOW1LK1RWU0JZeVFlZCtXOVNRZmZNawpRdnBzT2YrMWtNY1JIbFFsZVhsZ3FITmtBVXRjN2MxUlBiVjRmdkw3dTJBWmgvWTluaS9kZ2R4dHRwYkRQYi9hCnhaTG54TEE1SzNPdFNzWEhOamNxSFZXV0hVc2krb0dkay9SR2NMSnlmbDJKa2ljbVRIZFhwL0lycFBLRzl5V20KNzU3QWRhbGljdVkybTdBNCszZElZazhIN20wdkR2T3hkZTRyaHdJREFRQUJBb0lCQVFDNzUwbnRkckJTMnZVQwoxQ042QWhxZnZ6WXFTMDh3bHEwS2Z0K1h5MU9QcUVPbjhKOTJsbzc4N3BvT0s5ZFhtbDdEMDAyQ2VjdGJRUHZ3CkFZZGFjMmVESUF3T1FHZmZPZnpRSTJxTkNkczZ1N3k5YTYrK0h4VUMzTkhvejA1bmRVQjVZSVdGZFhOZjNvZ2cKK3pRVWVwSUQxV3J3SzBXVWhldXVVTHVDQjcwSm5sb095VkhYQTU1azBpc1dreDlYdnlrdUpJVXFhck94ZGc2QgpBeXFWajlsQm5mZDRmSDUwNGZJZWl2UE83d1NaVFZiOHRBc1NaRjI5eHl5K0tkalY2ejFuSWlaV2g4eWF1UktRClVSdGdsblJQaUJOeG9DZU1waERaSFc4T3ZYcVBOR09QbFppaG83K0x0Ujg2blF4NXgvNGN3aHBlOXJ4N2V5RngKOTk3a0NFY1JBb0dCQVAraVFGT1pva3Y5VlVkWVB3dWM4THNQZ2U3T3BaMUFndXRwUjdSWnBkTE9reG9JR3k5aQo4ZXdDWDJrRHlCM1RFeWZhWVFqWEVuR0JaL1dZM3c2RERYZDlGRG0xdmFzME5ZcDhPUmhUU1ArVVpaYjBSaStNCjc4d2RJdG1oT1ZpTXd6MGVBY0hrajRibWdaZk4raVlWOU9jZWY2eGE2REFBcnlPTGRnbHVVakxaQW9HQkFPczMKOEFEUm9VTm4xTytLK2UxL1UwbkZYbnJkWDdBNUdlTjdVd2l4eTZlN2lsZU1sbjhpNXBGaXBDdll5dkRMZFBVSwplcDV2Z2duWU5Ua3dxdnFDYkVqbExUU09MVFZZbStRQStRMzJhczlNNzBPcFhOSzcyQ2VvSjBXYXowSnl1TVBCCnpmaWJmdHYzN1ZySDNLN3RDaUlyVTBPSEo1V3V5UmNZV3gyOVhaVmZBb0dCQUtVdXhybytrQ3ppS2ZUTUJSRVAKL0U0am15WWd5Y3R2SUNuV0FjdDhFamJCM1RQNUFQZ0J5NmxoYngyQW9CTUZqVjgzTVhSdzVTNExISTRLbGpmZQpYeGxTN1hyTkFSNWJ3aTBXVUI1ejBydXp2R0ZxdnQrREJvQ3lZdzZWcTJTWXNLQVJmN2syWTdnYndxbkJJMTd3CjJTdHUvYmoxbFF0UHBkd21CY1BhVWFzaEFvR0JBSXIrc0JWYnl1YXhDYlJQdEtheVViNUxJaXlLZWt3QlFob1oKdXhSdE5BSTNJV1hnenVIcjlzRzh2M1NsbEM2OG02MWRkdDMrMktJR29GVGVQSHJ4N1JrYVRCODlVTnV3TTlhRQorS2RXa1FGVTNpSm1oMUtEN0JSckdtSFlQRmR3d1Z2MFAwbUVZVytNenphUTJnaUlUQytxMkhZVC9NRkgyczZKCjl2WFkrOThUQW9HQVJlbUdhV2dCZ2ZKR2NkaWt1UkNxT1VvOThrZFNyeGphV2V0TTc3Vzc0a29NSFdUMlE1YkgKZUJOU2d1M0liYlBRK1RJUkFsdVhTQmhrK2FKNmVid0J4bEFQTzlCcWY2eUMxTEtoWkdLcWVQV3gwd0F2aUIydwo2UE14S3JnZG9OUDBDZUo4T3ZETDQ4aWFaS2NzSk9Fdi80RzBSNVQ1NHI3bmoyOFdSOE1SckE0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: my-cluster
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.12.2@sha256:00508f78dae5412161fa40ee30069c2802aef20f7bdd20e91423103ba8c0df6e
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
